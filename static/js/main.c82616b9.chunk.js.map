{"version":3,"sources":["pages/AboutMe.tsx","components/projects/ProjectsHero.tsx","components/projects/ProjectCard.tsx","content/content.js","styles/ProjectsStyles.tsx","pages/Projects.tsx","pages/ProjectDetail.tsx","Routes.js","components/layout/AppBar.tsx","components/layout/AppFooter.tsx","styles/AppStyles.tsx","theme.tsx","index.tsx","App.tsx"],"names":["AboutMe","ProjectsHero","content","title","subtitles","ctaPrimary","ctaSecondary","heroButtonsClass","iconClass","Typography","component","variant","align","color","gutterBottom","paragraph","map","subtitle","index","Fragment","key","className","Grid","container","spacing","justify","item","Fab","href","target","to","ProjectCard","cardData","details","imageUrl","imageTitle","codeUrl","demoUrl","cardClass","cardContentClass","cardMediaClass","detailsPath","Card","style","textDecoration","CardMedia","image","CardContent","CardActions","Button","size","PageContent","navTitle","heading","smallText","ProjectsContent","useProjectStyles","makeStyles","theme","icon","marginRight","heroContent","backgroundColor","palette","background","paper","padding","heroButtons","marginTop","cardGrid","paddingTop","paddingBottom","card","height","display","flexDirection","cardMedia","cardContent","flexGrow","Projects","classes","projects","CssBaseline","Container","maxWidth","project","xs","sm","md","ProjectDetail","Routes","exact","path","render","AppBar","position","Toolbar","Link","noWrap","AppFooter","footerClass","useAppStyles","fontSize","footer","createMuiTheme","primary","main","secondary","error","red","A400","default","ReactDOM","ThemeProvider","AppStyles","headerContent","footerContent","document","querySelector"],"mappings":"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","file":"static/js/main.c82616b9.chunk.js","sourcesContent":["import React from 'react'\n\nexport const AboutMe = () => {\n  return (\n    <div>\n      About Me\n    </div>\n  )\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\n// import Button from '@material-ui/core/Button'\nimport Fab from '@material-ui/core/Fab'\nimport GitHubIcon from '@material-ui/icons/GitHub';\n\ninterface IProps {\n  content: any\n  heroButtonsClass: any\n  iconClass: any\n}\n\nexport const ProjectsHero: React.FC<IProps> = ({\n  content: {\n    title,\n    subtitles,\n    ctaPrimary,\n    ctaSecondary\n  },\n  heroButtonsClass,\n  iconClass\n}) => {\n  return (\n    <>\n      <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n        {title}\n      </Typography>\n      <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\n        {subtitles.map((subtitle: string, index: number) => (\n          <React.Fragment key={index}>\n            <span>{subtitle}</span>\n            <br/>\n          </React.Fragment>\n        ))}\n      </Typography>\n      <div className={heroButtonsClass}>\n        <Grid container spacing={2} justify=\"center\">\n          <Grid item>\n            <Fab variant=\"extended\" color=\"primary\" href=\"https://github.com/nstranquist\" target=\"_blank\">\n              <GitHubIcon className={iconClass} />\n              {ctaPrimary}\n            </Fab>\n          </Grid>\n          <Grid item>\n            <Link to='/aboutme'>\n              <Fab variant=\"extended\">\n                {/* TODO: set up routing so I can pull this page up */}\n                {ctaSecondary}\n              </Fab>\n            </Link>\n          </Grid>\n        </Grid>\n      </div>\n    </>\n  )\n}\n","import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport AttachFileIcon from '@material-ui/icons/AttachFile'\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward'\n// styled components\n// import { CardMediaStyle } from '../../styles/MediaCard'\n\nexport interface ProjectCard {\n  title: string\n  details: string\n  imageUrl?: string\n  imageTitle?: string\n  codeUrl: string\n  demoUrl?: string\n  detailsPath: string\n}\n\ninterface IProps {\n  cardData: any\n  cardClass: any\n  cardContentClass: any\n  cardMediaClass: any\n  detailsPath: string\n  // cardIconClass: any\n}\n\n// issue: <CardMedia /> not letting me assign an 'alt' property to the image... hmm\nexport const ProjectCard: React.FC<IProps> = ({\n  cardData: {\n    title,\n    details,\n    imageUrl=\"https://placekitten.com/500/300\",\n    imageTitle=\"Image Title\",\n    codeUrl,\n    demoUrl=null\n  },\n  cardClass,\n  cardContentClass,\n  cardMediaClass,\n  detailsPath,\n  // cardIconClass\n}) => {\n  // could add a hover or 'flip' feature to card, would pass in as prop to <CardWrapped> or something\n  // const [flipped, setFlipped] = useState<boolean>(false)\n  // const colors = ['purple', 'green', 'red', 'blue', 'orange', 'yellow']\n  // const randomColor = colors[Math.random()*colors.length]\n  // const getRandomColor = () => {\n  //   let randomIndex = Math.random()*colors.length\n  //   return colors[randomIndex]\n  // }\n\n  return (\n      <Card className={cardClass}>\n        <Link to={detailsPath} style={{color:'inherit', textDecoration:'none'}}>\n          {imageUrl ? (\n            <CardMedia\n              className={cardMediaClass}\n              image={imageUrl}\n              title={imageTitle}\n            />\n          ) : (\n            <CardMedia\n              className={cardMediaClass}\n              title={imageTitle}\n              // color={randomColor}\n              // backgroundColor={randomColor}\n            />\n          )}\n        </Link>\n        <CardContent className={cardContentClass}>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            {title}\n          </Typography>\n          <Typography>\n            {details}\n          </Typography>\n        </CardContent>\n        <CardActions>\n          <Button size=\"small\" color=\"primary\" href={codeUrl} target=\"_blank\">\n            {/* Code/Nav Icon Here */}\n            <AttachFileIcon />\n            Code\n          </Button>\n          {demoUrl && (\n            <Button size=\"small\" color=\"primary\" href={demoUrl} target=\"_blank\">\n              See Demo\n              <ArrowForwardIcon />\n            </Button>\n          )}\n        </CardActions>\n      </Card>\n  )\n}\n","\n/**** style guide for content formatting: ****/\n\n// 1) if item is an array (multiple text strings to be formatted),\n// then it's name should be plural (i.e. \"subtitles\")\n// 2) each page's content should be exported as its own object\n// 3) 'Page Content' contains all content needed for the base layout (nothing page-specific)\n// 3) grammar: camelCase for variable names, unless it is a page header section, where all words are captilized\n\n/**** end of style guide ****/\n\n\nexport const PageContent = {\n  \"headerContent\": {\n    navTitle: \"Nico Stranquist | Portfolio\",\n    // currently using hardcoded GitHub icon / link\n    //imgUrl: \"path-to-image\"\n  },\n  \"footerContent\": {\n    heading: \"Thanks for stopping by!\",\n    // subheading: ** will just hardcode, to keep it simple. Because Links are in Subheading\n    smallText: \"Nico Stranquist, 2019\"\n  }\n}\n\n// content by page\nexport const AboutMeContent = {\n  \"Overview\": {\n    title: \"A Technical Overview\",\n    details: \"An enthusiastic, well-rounded software developer with specialized skills in javascript\"\n  },\n  \"Skills\": {\n    skills: [\n      'JavaScript',\n      'React.js',\n      'NoSQL',\n      'etc...'\n    ],\n  },\n}\n\nexport const ProjectsContent = {\n  \"ProjectsHero\": {\n    title: 'Hi, my name is Nico.',\n    subtitles: [\n      \"Welcome to my art gallery--\",\n      \"I mean, dev portfolio!\",\n    ],\n    // this content can just be hard-coded in the component actually\n    ctaPrimary: 'GitHub',\n    ctaSecondary:'Tech Skills',\n    // add social media button bar beneath this, as an array of objects with title, iconName, and link\n  },\n  \"Projects\": [\n    {\n      title: \"KanBan Board\",\n      details: 'Re-creating a tool often used in Agile development',\n      imageUrl: \"/images/kanban-board.png\", // '/images/kanban-board.png'\n      imageTitle: 'screenshot of the kanban board project',\n      codeUrl: 'https://github.com/nstranquist/coding-challenge',\n      demoUrl: 'https://nstranquist.github.io/coding-challenge/',\n    },\n    {\n      title: \"RPG Quest (pt 3)\",\n      details: 'An rpg game where users can level up and fight monsters, or elect to practice their hacking skills (Node.js version coming soon, hackers)',\n      imageUrl: \"https://placekitten.com/300/500\",\n      imageTitle: 'example title',\n      codeUrl: 'https://github.com/nstranquist/rpg-quest-pt3',\n      // demoUrl: 'https://github.com/nstranquist/rpg-quest-pt3',\n    },\n    {\n      title: \"City Passport\",\n      details: \"Let's users rack up stamps while visiting the coolest places in their city\",\n      imageUrl: \"https://placekitten.com/300/500\",\n      imageTitle: 'example title',\n      codeUrl: 'https://github.com/nstranquist/city-passport',\n      // demoUrl: 'https://github.com',\n    },\n    {\n      title: \"TimeShift Clock (grayscale)\",\n      imageTitle: 'Use this app to shift time in your favor',\n      codeUrl: 'https://github.com/nstranquist/timeshift-clock-grayscale',\n      demoUrl: 'https://timeshift-grayscale.surge.sh',\n    },\n    {\n      title: \"My First Project\",\n      imageTitle: 'example title',\n      codeUrl: 'https://github.com/nstranquist',\n      demoUrl: 'https://github.com',\n    },\n    {\n      title: \"My First Project\",\n      imageUrl: \"https://placekitten.com/300/500\",\n      imageTitle: 'example title',\n      codeUrl: 'https://github.com/nstranquist',\n      demoUrl: 'https://github.com',\n    },\n    {\n      title: \"My First Project\",\n      imageUrl: \"https://placekitten.com/300/500\",\n      imageTitle: 'example title',\n      codeUrl: 'https://github.com/nstranquist',\n      demoUrl: 'https://github.com',\n    },\n    {\n      title: \"My First Project\",\n      imageUrl: \"https://placekitten.com/300/500\",\n      imageTitle: 'example title',\n      codeUrl: 'https://github.com/nstranquist',\n      demoUrl: 'https://github.com',\n    },\n    {\n      title: \"My First Project\",\n      imageUrl: \"https://placekitten.com/300/500\",\n      imageTitle: 'example title',\n      codeUrl: 'https://github.com/nstranquist',\n      demoUrl: 'https://github.com',\n    },\n    {\n      title: \"My First Project\",\n      imageUrl: \"https://placekitten.com/300/500\",\n      imageTitle: 'example title',\n      codeUrl: 'https://github.com/nstranquist',\n      demoUrl: 'https://github.com',\n    },\n  ]\n}\n","\nimport { makeStyles } from '@material-ui/core/styles';\n\n// styles for the projects page\nexport const useProjectStyles = makeStyles(theme => ({\n  icon: {\n    marginRight: theme.spacing(1),\n    // fontSize: '1.6rem'\n  },\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  cardMedia: {\n    paddingTop: '56.25%', // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n}));","import React from 'react';\nimport { Link } from 'react-router-dom'\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\n\n// import custom components\nimport { ProjectsHero } from '../components/projects/ProjectsHero'\nimport { ProjectCard } from '../components/projects/ProjectCard'\n\n// import content object\nimport { ProjectsContent } from '../content'\n\n// import styles\nimport { useProjectStyles } from '../styles/ProjectsStyles'\n\n// const cards = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\nexport const Projects = () => {\n  const classes = useProjectStyles();\n  // const {card, cardContent, cardMedia} = classes\n  const projects = ProjectsContent.Projects\n\n  return (\n    <>\n      <CssBaseline />\n      <main>\n        {/* Hero Section */}\n        <div className={classes.heroContent}>\n          <Container maxWidth=\"sm\">\n            <ProjectsHero\n              content={ProjectsContent.ProjectsHero}\n              heroButtonsClass={classes.heroButtons} \n              iconClass={classes.icon}\n            />\n          </Container>\n        </div>\n        <Container className={classes.cardGrid} maxWidth=\"md\">\n          <Grid container spacing={4}>\n            {projects.map((project, index) => (\n              <Grid item key={index} xs={12} sm={6} md={4}>\n                <ProjectCard\n                  cardData={project} \n                  cardClass={classes.card}\n                  cardContentClass={classes.cardContent}\n                  cardMediaClass={classes.cardMedia}\n                  detailsPath={`/projects/${project.title}`}\n                />\n              </Grid>\n            ))}\n          </Grid>\n        </Container>\n      </main>\n    </>\n  );\n}\n","import React from 'react'\n\nexport const ProjectDetail = () => {\n  return (\n    <div>\n      Project Detail\n    </div>\n  )\n}\n","import React from 'react'\nimport { Switch, Route, Redirect } from 'react-router-dom'\n\n// import pages for each route\nimport { AboutMe } from './pages/AboutMe'\nimport { Projects } from './pages/Projects'\nimport { ProjectDetail } from './pages/ProjectDetail'  // use params.id to get projects data\n\nexport const Routes = () => {\n  // TODO: pass props into components with util function\n  return (\n    <Switch>\n      <Route exact path='/aboutme' component={AboutMe} />\n      <Route exact path='/projects' component={Projects} />\n      <Route exact path='/projects/:id' component={ProjectDetail} />\n      <Route path='/' render={() => <Redirect to='/projects' />} />\n    </Switch>\n  )\n}\n","import React from 'react'\nimport { Link as RouterLink } from 'react-router-dom'\nimport { AppBar as AppBarMUI } from '@material-ui/core';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\n\ninterface IProps {\n  content: any\n  iconClass: any\n}\n\nexport const AppBar: React.FC<IProps> = ({\n  content: {\n    navTitle\n  },\n  iconClass\n}) => {\n\n  // TODO: add a NavList for nav options, integrate with react-router for routing\n\n  return (\n    <AppBarMUI position=\"relative\">\n      <Toolbar>\n        <Link href=\"https://github.com/nstranquist/dev-portfolio\" target=\"_blank\" style={{color:'white'}}>\n          <GitHubIcon className={iconClass} />\n        </Link>\n        <RouterLink to='/projects' style={{color:'white', textDecoration:'none'}}>\n          <Typography variant=\"h6\" color=\"inherit\" noWrap>\n            {navTitle}\n          </Typography>\n        </RouterLink>\n        {/* NavList Here */}\n      </Toolbar>\n    </AppBarMUI>\n  )\n}","import React from 'react'\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link'\n\ninterface IProps {\n  content: any\n  footerClass: any\n}\n\nexport const AppFooter: React.FC<IProps> = ({\n  content: {\n    heading,\n    smallText,\n  },\n  footerClass\n}) => (\n  <footer className={footerClass}>\n    <Typography variant=\"h6\" align=\"center\" gutterBottom>\n      {heading}\n    </Typography>\n    <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\" component=\"p\">\n      Please reach out on\n      <Link href=\"https://github.com/nstranquist\" target=\"_blank\"> GitHub </Link>\n      or\n      <Link href=\"https://www.linkedin.com/in/nicholas-stranquist/\" target=\"_blank\"> LinkedIn </Link>\n      for inquiries\n    </Typography>\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {smallText}\n    </Typography>\n  </footer>\n)\n","\nimport { makeStyles } from '@material-ui/core/styles';\n\nexport const useAppStyles = makeStyles(theme => ({\n  icon: {\n    marginRight: theme.spacing(2),\n    fontSize: '1.6rem'\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(6),\n  },\n}))\n","import red from '@material-ui/core/colors/red';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#556cd6',\n    },\n    secondary: {\n      main: '#19857b',\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: '#fff',\n    },\n  },\n});\n\nexport default theme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport App from './App';\nimport theme from './theme';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.querySelector('#root'),\n);\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom'\nimport { Routes } from './Routes'\n\n// import components\nimport { AppBar } from './components/layout/AppBar'\nimport { AppFooter } from './components/layout/AppFooter'\n// import { Projects as ProjectsPage } from './pages/Projects'\n\n// import content\nimport { PageContent } from './content'\n\n// import styles\nimport { useAppStyles } from './styles/AppStyles'\n\nexport default function App() {\n  const AppStyles = useAppStyles()\n  const { headerContent, footerContent } = PageContent\n\n  return (\n    <BrowserRouter>\n      <AppBar content={headerContent} iconClass={AppStyles.icon} />\n      {/* TODO: replace with some kind of <RouterView> to switch routes */}\n      <Routes />\n      <AppFooter content={footerContent} footerClass={AppStyles.footer} />\n    </BrowserRouter>\n  );\n}\n"],"sourceRoot":""}